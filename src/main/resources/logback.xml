<configuration>
    <property name="FILE_PATH" value="/Users/g5niusx/Workspace/logback-demo/log"/>

    <!--申明一个appender，用来定义是控制台输出还是文件输出，以及输出日志的格式-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- %msg表示需要输出的内容 -->
            <!-- %n 表示换行-->
            <!-- %logger表示输出日志的名称-->
            <pattern>%d{YYYY-MM-DD HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件输出路径-->
        <file>${FILE_PATH}/file.log</file>
        <!--是否追加内容，默认为true-->
        <append>true</append>
        <encoder>
            <pattern>%d{YYYY-MM-DD HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!--回滚策略,时间和文件大小回滚-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--设置备份的格式-->
            <fileNamePattern>${FILE_PATH}/file.%d{yyyy-MM-dd-HH-mm-ss}.gz</fileNamePattern>
            <!--保留的时间，以文件的格式来决定，如果文件格式最后一位为秒，则单位是秒-->
            <maxHistory>5</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 异步输出的日志appender-->
    <appender name="SYNC_FILE_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE_APPENDER"/>
    </appender>

    <!-- level表示需要输出的日志等级,常用的是INFO,DEBUG,ERROR-->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
    </root>

    <logger name="com.g5niusx.log.sync" level="DEBUG" additivity="false">
        <appender-ref ref="SYNC_FILE_APPENDER"/>
    </logger>

</configuration>